import { useCallback } from 'react';
import { useExp, useExpDispatch } from '@/src/domains/exploitation/interfaces/useExp.ts';
import { useAuth } from '@/src/domains/authentification/interfaces/useAuth.ts';
import { useAccount } from '@/src/domains/account/interfaces/useAccount.ts';
import { useInterval } from '@/src/shared/hooks/useInterval.ts';
import { DialsComponent } from '@/src/shared/ui/dials/dials.component.tsx';
import { DialComponent } from '@/src/shared/ui/dial/dial.component.tsx';
import { NumberComponent } from '@/src/shared/ui/number/number.component.tsx';
import { BadgeComponent } from '@/src/shared/ui/badge/badge.component.tsx';
import { LabelComponent } from '@/src/shared/ui/label/label.component.tsx';
import { ClickerComponent } from '@/src/shared/ui/clicker/clicker.component.tsx';
import styles from '@/src/domains/industry/interfaces/ui/dashboard/dashboard.module.scss';

export const WireComponent = () => {
  console.log('WireComponent');
  const expDis = useExpDispatch();
  const { wire, wireCost, wireQuantity } = useExp();
  const { user } = useAuth();
  const { pause } = useAccount();

  const buyWire = () => {
    const cost = wireCost + (Math.random() + 0.25); // 0 & 1, 0.25 & 1.25
    expDis({ type: 'BUY_WIRE', cost });
  };

  const updateWireCost = useCallback(() => {
    const cost = wireCost > 8 ? wireCost - 0.26 : Math.random() * 8 + 12; // 0 & 1, 0 & 8, 12 & 20
    expDis({ type: 'WIRE_COST', cost });
  }, [wireCost]);

  useInterval(updateWireCost, 1e4, !!user && !pause);
  // useInterval(updateWireCost, 1e4, !!user && !play && !factory.feature.production.available);
  // // if (factory.feature.production.available) return null;

  return (
    <DialsComponent>
      <DialComponent>
        <NumberComponent
          className={styles.value}
          value={wireCost}
          asset="currency"
        />
        <LabelComponent
          className={styles.label}
          label="wire cost"
        />
      </DialComponent>
      <DialComponent>
        <div className={styles.group}>
          <NumberComponent
            className={styles.value}
            value={wire}
          />
          <BadgeComponent
            value={wireQuantity}
            status="warning"
          />
        </div>
        <LabelComponent
          className={styles.label}
          label="wire stock"
        />
        <ClickerComponent
          prefix="+"
          value={wireQuantity}
          // disabled={funds < wireCost}
          onClick={buyWire}
        >
          +
        </ClickerComponent>
      </DialComponent>
    </DialsComponent>
  );
};

import { type FC, useReducer } from 'react';
import { ExpContext, ExpDisContext } from '@/src/domains/exploitation/infrastructure/exp.context.tsx';
import { expReducer } from '@/src/domains/exploitation/application/exp.reducer.ts';
import { useLocalStorage } from '@/src/shared/hooks/useLocalStorage.ts';
import { useFirstRender } from '@/src/shared/hooks/useFirstRender.ts';
import { EXP_KEY, EXP_STATE } from '@/src/domains/exploitation/infrastructure/exp.key.ts';
import type { Children } from '@/src/shared/types/children.type.ts';

export const ExpProvider: FC<{ children: Children }> = ({ children }) => {
  const stored = useLocalStorage(EXP_KEY, EXP_STATE);
  const initial = stored.get() ?? EXP_STATE;
  const [state, dispatch] = useReducer(expReducer, initial);

  useFirstRender(() => {
    stored.set(state);
  }, [state]);

  return (
    <ExpContext.Provider value={state}>
      <ExpDisContext.Provider value={dispatch}>{children}</ExpDisContext.Provider>
    </ExpContext.Provider>
  );
};
